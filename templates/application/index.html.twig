{% extends 'base.html.twig' %}

{% block title %}Applications - {{ parent() }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet">
    <style>
        th {
            cursor: pointer;
        }
    </style>
{% endblock %}

{% block body %}
    <h1>Applicants <span class="text-muted">({{ status }})</span> </h1>

    <a class="btn btn-primary d-inline" href="{{ path('application_find', {'status': 'Ready for Review'}) }}">Ready for Review</a>
    <a class="btn btn-primary d-inline" href="{{ path('application_find', {'status': 'Still Editing'}) }}">Still Editing</a>
    <a class="btn btn-primary d-inline" href="{{ path('application_find', {'status': 'Approved'}) }}">Approved</a>
    <table class="table">
        <thead>
            <tr>
                <th>Student<i class="fa fa-fw fa-sort"></i></th>
                <th>Status<i class="fa fa-fw fa-sort"></i></th>
                <th>Last Modified<i class="fa fa-fw fa-sort"></i></th>
            </tr>
        </thead>
        <tbody>
        {% for application in applications %}
            <tr>
                <td><a href="{{ path('user_show', {'id': application.user.id}) }}">{{ application.user.lastname }}, {{ application.user.firstname }}</a></td>
                <td>{{ application.status }}</td>
                <td>{{ application.updated ? application.updated|date('Y-m-d H:i:s') : '' }}</td>
            </tr>
        {% else %}
            <tr>
                <td colspan="8">no records found</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    {# Simple table sort #}
    <script>
        const getCellValue = (tr, idx) => tr.children[idx].innerText || tr.children[idx].textContent;

        const comparer = (idx, asc) => (a, b) => ((v1, v2) =>
                v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) ? v1 - v2 : v1.toString().localeCompare(v2)
        )(getCellValue(asc ? a : b, idx), getCellValue(asc ? b : a, idx));

        // do the work...
        document.querySelectorAll('th').forEach(th => th.addEventListener('click', (() => {
            const table = th.closest('table');
            const tbody = table.querySelector('tbody');
            Array.from(tbody.querySelectorAll('tr'))
                .sort(comparer(Array.from(th.parentNode.children).indexOf(th), this.asc = !this.asc))
                .forEach(tr => tbody.appendChild(tr));
        })));
    </script>
{% endblock %}